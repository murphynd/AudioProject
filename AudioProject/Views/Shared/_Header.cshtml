@using Microsoft.AspNetCore.Identity
@using AudioProject.Models
@inject SignInManager<ApplicationUser> signInManager
@inject UserManager<ApplicationUser> userManager
<nav class="navbar navbar-expand-lg navbar-light fixed-top bg-white ">

  <a class="navbar-brand" href="/">auklo <svg width="1rem" height="1rem" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
	viewBox="0 0 47 47" style="enable-background:new 0 0 47 47;" xml:space="preserve">
		<path d="M1.9,30.9c-1,0-1.9,0.8-1.9,1.9v12.4c0,1,0.8,1.9,1.9,1.9s1.9-0.8,1.9-1.9V32.8C3.7,31.8,2.9,30.9,1.9,30.9z"/>
		<path d="M7.3,18.6c-1,0-1.9,0.8-1.9,1.9v24.7c0,1,0.8,1.9,1.9,1.9s1.9-0.8,1.9-1.9V20.4C9.1,19.4,8.3,18.6,7.3,18.6z"/>
		<path d="M12.7,24.7c-1,0-1.9,0.8-1.9,1.9v18.6c0,1,0.8,1.9,1.9,1.9s1.9-0.8,1.9-1.9V26.6C14.5,25.6,13.7,24.7,12.7,24.7z"/>
		<path d="M18.1,12.4c-1,0-1.9,0.8-1.9,1.9v30.9c0,1,0.8,1.9,1.9,1.9c1,0,1.9-0.8,1.9-1.9V14.2C19.9,13.2,19.1,12.4,18.1,12.4z"/>
		<path d="M23.5,0c-1,0-1.9,0.8-1.9,1.9v43.3c0,1,0.8,1.9,1.9,1.9c1,0,1.9-0.8,1.9-1.9V1.9C25.4,0.8,24.5,0,23.5,0z"/>
		<path d="M39.7,24.7c-1,0-1.9,0.8-1.9,1.9v18.6c0,1,0.8,1.9,1.9,1.9s1.9-0.8,1.9-1.9V26.6C41.6,25.6,40.8,24.7,39.7,24.7z"/>
		<path d="M45.1,12.4c-1,0-1.9,0.8-1.9,1.9v30.9c0,1,0.8,1.9,1.9,1.9c1,0,1.9-0.8,1.9-1.9V14.2C47,13.2,46.2,12.4,45.1,12.4z"/>
		<path d="M28.9,18.6c-1,0-1.9,0.8-1.9,1.9v24.7c0,1,0.8,1.9,1.9,1.9s1.9-0.8,1.9-1.9V20.4C30.8,19.4,29.9,18.6,28.9,18.6z"/>
		<path d="M34.3,37.1c-1,0-1.9,0.8-1.9,1.9v6.2c0,1,0.8,1.9,1.9,1.9s1.9-0.8,1.9-1.9V39C36.2,37.9,35.4,37.1,34.3,37.1z"/>
</svg>
  </a>
  @* <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav"> *@


  <li class="nav-item">
    <a class="nav-link" href="/tone">Tones</a>
  </li>
  
  @if (signInManager.IsSignedIn(User))
  {
    var currentUser = await userManager.GetUserAsync(User);

    var isAdmin = currentUser != null
      && await userManager.IsInRoleAsync(
      currentUser,
      Constants.AdministratorRole);

    if (isAdmin)
    {
      @Html.ActionLink(" Manage Users", "Index", "ManageUsers", null, new { @class = "btn btn-info fa fa-gear"})
    }

    @if (User.Identity.IsAuthenticated)
    {
      <div class="nav-item userinfo">
        @Html.ActionLink(@User.Identity.Name, "Index","Account", null, new { @class = "btn btn-outline-info"})
      </div>
    }
    else
    {
      <div class="userinfo">
        @Html.ActionLink(" Log in", "Login", "Account", null, new { @class = "btn btn-info fa fa-user" })
      </div>
    }
  }
  else
  {
    <li class="nav-item">
    <a class="nav-link" href="/Account/login">Login</a>
  </li> 

  }
  
  @* <p data-muted="false" class="mx-auto my-2 my-sm-0"></p>
  <li class="nav-item">
    volume
  </li> 
  <div class="slidecontainer1">
      <input type="range" min="10" max="500" value="80" class="slider1" id="VolumeOutput">
    </div>
    <li class="nav-item">
      <p id="mute" data-muted="false" class="btn btn-outline-dark btn-sm mx-auto my-2 my-sm-0">mute</p>
    </li> *@
</nav>

@* <li class="nav-item">
    <a class="nav-link" href="/Account">Login</a>
  </li> *@